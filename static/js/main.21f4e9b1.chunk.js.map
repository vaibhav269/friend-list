{"version":3,"sources":["components/ConfirmationModal/index.js","components/constants/imageUrl.js","components/FriendCard/index.js","components/FriendsList/index.js","App.js","reportWebVitals.js","index.js"],"names":["ConfirmationModal","props","className","text","onClick","onAccept","onClose","hostname","FAV_FILLED","FAV","BIN","FriendCard","friend","handleToggleFav","handleRemove","useState","showModal","setShowModal","handleToggleModal","name","src","isFav","id","alt","FriendsList","flist","setFlist","searchedList","setSearchedList","searchVal","setSearchVal","page","setPage","isSorted","setIsSorted","map","f","filter","handleSearch","e","key","Date","now","target","value","handlePage","type","useEffect","filteredArr","count","i","length","includes","push","slice","placeholder","onKeyDown","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21f4e9b1.chunk.js","sourcesContent":["import  './index.css'\n\nfunction ConfirmationModal(props){\n  \n  const handleAccept = ()=>{\n    props.onAccept()\n    props.onClose()\n  }\n\n  return(\n    <div className=\"modal-container\">\n    <div className=\"modal\">\n      <div className=\"header\"> Confirmation Popup </div>\n      <p className=\"info\">\n        {props.text}\n      </p>\n      <div className=\"footer\">\n        <button className=\"btn confirm-btn\" onClick={handleAccept}> Confirm </button>\n        <button className=\"btn cancel-btn\" onClick={props.onClose}> Cancel </button>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ConfirmationModal","const hostname = 'https://vaibhav269.github.io/friend-list'\n\nexport const FAV_FILLED = `${hostname}/favorite-filled.png`\nexport const FAV = `${hostname}/favorite.png`\nexport const BIN = `${hostname}/bin.png`","import './index.css';\nimport { useState } from 'react'\nimport ConfirmationModal from '../ConfirmationModal';\nimport { BIN, FAV, FAV_FILLED } from '../constants/imageUrl';\n\nfunction FriendCard(props){\n  const {friend, handleToggleFav, handleRemove} = props\n  const [showModal, setShowModal] = useState(false)\n  \n  const handleToggleModal = ()=>{\n    setShowModal(!showModal)\n  }\n\n  return(\n    <div className=\"f-card\">\n      <div className=\"f-detail\">\n        <div className=\"f-name\"> {friend.name} </div>\n        <div className=\"f-info\"> is your friend </div>\n      </div>\n      <div className=\"f-control\">\n        <img className=\"icons\" src = { friend.isFav? FAV:FAV_FILLED} onClick={()=>handleToggleFav(friend.id)} alt=\"Fav\"/>\n        <img className=\"icons ml-10\" src = {BIN} onClick={handleToggleModal} alt=\"Remove\"/>\n      </div>\n      {\n        showModal &&\n        <ConfirmationModal\n          text=\"Are you sure?\" \n          onAccept = {()=>handleRemove(friend.id)} \n          onClose = {handleToggleModal} \n        />\n      }\n    </div>\n  )\n}\n\nexport default FriendCard","import { useState, useEffect } from 'react'\nimport FriendCard from '../FriendCard';\nimport './index.css';\n\nfunction FriendsList(){\n  const [flist, setFlist] = useState([])\n  const [searchedList, setSearchedList] = useState([])\n  const [searchVal, setSearchVal] = useState('')\n  const [page, setPage] = useState(0)\n  const [isSorted, setIsSorted] = useState(false)\n\n  const handleToggleSortFav = ()=>{\n    setIsSorted(!isSorted)\n  }\n\n  const handleToggleFav = (id)=>{\n      setFlist(flist.map((f)=>{\n        if(f.id === id){\n          return {\n            ...f,\n            isFav: !f.isFav\n          }\n        }else{\n          return f\n        }\n      }))\n  }\n\n  const handleAddFriend = ()=>{\n    setFlist([\n      ...flist,\n      {\n        id: Date.now(),\n        name: searchVal,\n        isFav: false\n      }\n    ])\n    setSearchVal('')\n  }\n\n  const handleRemove = (id)=>{\n    setFlist(flist.filter((f)=>f.id !== id))\n  }\n\n  const handleSearch = (e)=>{\n    if (e.key === 'Enter' && searchVal) {\n      handleAddFriend()\n    }\n    else {\n      setSearchVal(e.target.value)\n    }\n  }\n\n  const handlePage = (type)=>{\n    if(type === 'prev'){\n      setPage(page-1)\n    }else{\n      setPage(page+1)\n    }\n  }\n\n  useEffect(() => {\n    let filteredArr = []\n    if(searchVal){ \n      let count = 0 \n      for(let i = 0 ; i < flist.length; i++){\n        if(flist[i].name.includes(searchVal)){\n          count++ \n          if(count > (page*4)){\n            filteredArr.push(flist[i])\n          }\n        }\n        if(filteredArr.length === 4){\n          break\n        }\n      }\n      if(isSorted){\n        filteredArr = [\n          ...filteredArr.filter((f)=>f.isFav),\n          ...filteredArr.filter((f)=>!f.isFav)\n        ]\n      }\n    }else{\n      if(isSorted){\n        filteredArr = [\n          ...flist.filter((f)=>f.isFav),\n          ...flist.filter((f)=>!f.isFav)\n        ].slice(page*4,(page*4)+4) \n      }else{\n        filteredArr = [...flist].slice(page*4,(page*4)+4) \n      }\n    }\n    setSearchedList([...filteredArr])\n  }, [searchVal, flist, page, isSorted])\n\n  return (\n    <div className=\"flist-container\">\n      <div className=\"flist-head\">\n        <div>\n          Friends List\n        </div>\n        <button onClick={handleToggleSortFav}>\n          {isSorted?'Unsort':'Sort'} Favourites\n        </button>\n      </div>\n      <input \n        placeholder=\"Enter your friend's name\"\n        className=\"search-bar\"\n        type=\"text\" \n        value={searchVal} \n        onKeyDown={handleSearch}\n        onChange={handleSearch}\n      />\n      {\n        ((searchedList.length === 0) && searchVal && (page === 0))?\n          <div className=\"add-friend-note\"> \n            NOTE: Press enter to add Name to friends List \n          </div>\n        :\n        (\n          <>\n          {\n            searchedList.map((friend, i)=>(\n              <FriendCard \n                key = {i}\n                friend={friend} \n                handleToggleFav = {handleToggleFav} \n                handleRemove={handleRemove} \n              />\n            ))\n          }\n            <div className=\"pagination\">\n              <div className={`pagination-btn ${page===0?'disabled':''}`} onClick={()=>handlePage('prev')} >\n                Prev\n              </div>\n              <div className=\"pageNo\">\n                Page {page+1}\n              </div>\n              <div className={`pagination-btn ${(searchedList.length < 4)?'disabled':''}`} onClick={()=>handlePage('next')}>\n                Next\n              </div>\n            </div>\n          </>\n        )\n      }\n    </div>\n  )\n}\n\nexport default FriendsList","import './App.css';\nimport FriendsList from './components/FriendsList';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <FriendsList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}